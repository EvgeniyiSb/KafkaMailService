spring:
  application:
    name: notification-service
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: notification-group-new
      auto-offset-reset: earliest
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: '*'
        spring.json.type.mapping: user-event:com.example.notification_service.kafka.UserEvent
        spring.json.use.type.headers: true
        spring.json.fail.on.unknown.properties: false
  mail:
    host: smtp.gmail.com
    port: 587
#    username: ${MAIL_USERNAME:smtptest.sbj@gmail.com}
    username: smtptest.sbj@gmail.com
#    password: ${MAIL_PASSWORD:nsr6ee-Bw-gY}
    password: nsr6ee-Bw-gY
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

server:
  port: 8081

logging:
  level:
    com.example.notification_service: DEBUG
    org.springframework.kafka: DEBUG

test:
  topic: embedded-test-topic